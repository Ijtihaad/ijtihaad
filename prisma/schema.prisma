generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("IJTIHAD_DATABASE_URL")
}

model User {
  id            Int            @id @default(autoincrement())
  firstName     String         @db.VarChar(28)
  lastName      String         @db.VarChar(28)
  bio           String         @db.VarChar(28)
  urls          String         @db.VarChar(28)
  email         String         @unique @db.VarChar(28)
  username      String?        @unique @db.VarChar(18)
  phone         String?        @unique @db.VarChar(14)
  blocked       Boolean        @default(false)
  role          Role           @default(USER)
  createdAt     DateTime       @default(now())
  updatedAt     DateTime       @updatedAt
  image         String?        @db.VarChar(28)
  address       Address?
  password      Password?
  notifications Notification[]
  subscriptions Subscription[]

  @@map("users")
}

model Password {
  id     Int    @id @default(autoincrement())
  value  String @db.VarChar(80)
  userId Int    @unique
  user   User   @relation(fields: [userId], references: [id])

  @@map("passwords")
}

model Address {
  id       Int     @id @default(autoincrement())
  state    String  @db.VarChar(28)
  city     String  @db.VarChar(28)
  subcity  String  @db.VarChar(28)
  location String? @db.VarChar(28)
  user     User?   @relation(fields: [userId], references: [id])
  userId   Int?    @unique

  @@map("address")
}

model Subscription {
  id           Int    @id @default(autoincrement())
  user         User?  @relation(fields: [userId], references: [id])
  userId       Int?
  endpoint     String @unique @db.VarChar(255)
  subscription Json

  @@map("subscriptions")
}

model Notification {
  id        Int      @id @default(autoincrement())
  user      User?    @relation(fields: [userId], references: [id])
  toRole    Role?
  userId    Int?
  title     String   @db.VarChar(255)
  body      String   @db.Text
  checked   Boolean  @default(false)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("notifications")
}

enum Role {
  ADMIN @map("ADMIN")
  MUFTI @map("MUFTI")
  USER  @map("USER")
}
